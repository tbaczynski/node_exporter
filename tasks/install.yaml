---
- name: set internal variable platform-suffix for convenience
  set_fact:
    prometheus_platform_suffix: "linux-amd64"
  when: ansible_architecture == "x86_64"

- name: set internal variable platform-suffix for convenience
  set_fact:
    prometheus_platform_suffix: "linux-armv7"
  when: ansible_architecture == "armv7l"

- name: set internal variables for convenience
  set_fact:
    prometheus_node_exporter_subdir: "{{ prometheus_node_exporter_install_path }}/node_exporter-{{ prometheus_node_exporter_version }}.{{ prometheus_platform_suffix }}"  # noqa 204

- name: set internal variables for convenience
  set_fact:
    prometheus_node_exporter_daemon_dir: "{{ prometheus_node_exporter_subdir }}"

- name: set download url for versions
  set_fact:
    prometheus_node_exporter_tarball_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.{{ prometheus_platform_suffix }}.tar.gz"  # noqa 204

- name: create Prometheus group
  group:
    name: '{{ prometheus_node_exporter_group }}'
    state: present

- name: create Prometheus user
  user:
    name: "{{ prometheus_node_exporter_user }}"
    group: "{{ prometheus_node_exporter_group }}"
    createhome: no
    shell: /sbin/nologin
    comment: "Prometheus User"
    state: present

- name: mkdir for prometheus and node_exporter
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_node_exporter_user }}"
    group: "{{ prometheus_node_exporter_group }}"
    mode: 0750
  loop:
    - "{{ prometheus_node_exporter_install_path }}"
    - "{{ prometheus_node_exporter_config_path }}"

- name: download and untar node_exporter tarball
  unarchive:
    src: "{{ prometheus_node_exporter_tarball_url }}"
    dest: "{{ prometheus_node_exporter_install_path }}"
    owner: '{{ prometheus_node_exporter_user }}'
    group: '{{ prometheus_node_exporter_group }}'
    copy: no
    creates: '{{ prometheus_node_exporter_subdir }}'
  notify:
    - restart node_exporter

- name: copy node_exporter systemd profile
  template:
    src: 'node_exporter.service.j2'
    dest: '/lib/systemd/system/node_exporter.service'
    owner: root
    group: root
    mode: 0644
  notify:
    - systemd reload
    - restart node_exporter
  when: ansible_service_mgr == "systemd"

- name: copy node_exporter sysvinit profile
  template:
    src: 'node_exporter.initd.j2'
    dest: '/etc/init.d/node_exporter'
    owner: root
    group: root
    mode: 0755
  notify:
    - restart node_exporter
  when: ansible_service_mgr == "sysvinit"

- name: copy node_exporter config
  template:
    src: 'node_exporter.defaults.j2'
    dest: '/etc/default/node_exporter'
    owner: '{{ prometheus_node_exporter_user }}'
    group: '{{ prometheus_node_exporter_group }}'
    mode: 0640
  notify:
    - restart node_exporter

- name: node_exporter service enable
  service:
    name: node_exporter
    state: started
    enabled: true

...
